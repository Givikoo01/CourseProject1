@using CourseProject1.ViewModels
@model AddItemVM;
@using CourseProject1.Models.Enums;


@{
    ViewData["Title"] = "Add Item";
    var fieldTypes = Enum.GetNames(typeof(FieldType));
}

<h2>Add Item</h2>

<form asp-action="AddItem" method="post">
    <div class="form-group">
        <input type="hidden" asp-for="CollectionId" />
        <input type="hidden" asp-for="userId" />
        <label asp-for="Name">Name</label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Tags">Tags (separated by commas)</label>
        <input asp-for="Tags" class="form-control" />
        <span asp-validation-for="Tags" class="text-danger"></span>
    </div>

    @foreach (var customField in Model.CustomFields)
    {
        <div class="form-group">
            <label>@customField.Name</label>
            @switch (customField.FieldType)
            {
                case FieldType.Line:
                    <input asp-for="CustomFields" name="CustomFields[@Model.CustomFields.IndexOf(customField)].Name" class="form-control" value="" />
                    break;
                case FieldType.Text:
                    <textarea asp-for="CustomFields" name="CustomFields[@Model.CustomFields.IndexOf(customField)].Name" class="form-control">@customField.Name</textarea>
                    break;
                case FieldType.Numeric:
                    <input asp-for="CustomFields" type="number" name="CustomFields[@Model.CustomFields.IndexOf(customField)].Name" class="form-control" value="@customField.Name" />
                    break;
                case FieldType.Date:
                    <input asp-for="CustomFields" type="date" name="CustomFields[@Model.CustomFields.IndexOf(customField)].Name" class="form-control" value="@customField.Name" />
                    break;
                case FieldType.Logical:
                    <input type="checkbox" name="CustomFields[@Model.CustomFields.IndexOf(customField)].Name" class="form-check-input" value="true" @(customField.Name == "True" ? "checked" : "") />
                    break;
            }
        </div>
    }

    <button type="submit" class="btn btn-primary">Add Item</button>
</form>
@* @section Scripts {
    <script>
        var customFieldIndex = @(Model.CustomFields.Count);

        function addCustomField() {
            var customFieldsDiv = document.getElementById('custom-fields');
            var newCustomField = document.createElement('div');
            newCustomField.className = 'custom-field';

            var keyInput = document.createElement('input');
            keyInput.name = 'CustomFields[' + customFieldIndex + '].Key';
            keyInput.className = 'form-control';
            keyInput.placeholder = 'Key';

            var valueInput = document.createElement('input');
            valueInput.name = 'CustomFields[' + customFieldIndex + '].Value';
            valueInput.className = 'form-control';
            valueInput.placeholder = 'Value';

            newCustomField.appendChild(keyInput);
            newCustomField.appendChild(valueInput);
            customFieldsDiv.appendChild(newCustomField);

            customFieldIndex++;
        }
    </script>
} *@